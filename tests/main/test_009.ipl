
// big numbers

let power = \x \y {
   let aux = \x \y \acc {
      if y == 0 then
         acc
      else
         aux x (y - 1) (x * acc)
   };
   aux x y 1
};

let num1 = 1267650600228229401496703205376;
let num2 = -126765060022822940149670320537674809325432;

print num1;
print num2;
print (num1 + num2);
print (num1 - num2);
print (num1 * num2);
print (num2 div num1);
print (num2 mod num1);

print (power 2 30);
print (power 2 31);
print (power 2 32);
print (power 2 62);
print (power 2 63);
print (power 2 64);
print (power 2 100);
print (power (neg 2) 30);
print (power (neg 2) 31);
print (power (neg 2) 32);
print (power (neg 2) 62);
print (power (neg 2) 63);
print (power (neg 2) 64);
print (power (neg 2) 101);

let sqrt = \x {
   let aux = \x \top \bot {
      if top - bot <= 1 then
         bot
      else {
         let y = (top + bot) div 2
         in
         if y * y > x then
            aux x y bot
         else
            aux x top y
      }
   };
   aux x (x + 1) 0
};

print (sqrt (power 2 128));
print (sqrt (power 3 180));
print (sqrt (power num1 2));
print (sqrt (power num2 2));

let log = \x \y {
   let aux = \x \y \acc {
      if y == 1 then
         acc
      else
         aux x (y div x) (acc + 1)
   };
   aux x y 0
};

print (log 2 (power 2 100));
print (log 20 (power 20 100));
print (log 9 (power 3 100));

let fast_power = \x \y {
   let aux = \x \y \acc {
      if y == 0 then
         acc
      else if y mod 2 == 1 then
         aux (x * x) (y div 2) (x * acc)
      else
         aux (x * x) (y div 2) acc
   };
   aux x y 1
};

print (fast_power 2 30);
print (fast_power 2 31);
print (fast_power 2 32);
print (fast_power 2 62);
print (fast_power 2 63);
print (fast_power 2 64);
print (fast_power 2 100);
print (fast_power (neg 2) 30);
print (fast_power (neg 2) 31);
print (fast_power (neg 2) 32);
print (fast_power (neg 2) 62);
print (fast_power (neg 2) 63);
print (fast_power (neg 2) 64);
print (fast_power (neg 2) 101);

print (fast_power 2 1000);
print (fast_power 3 1000);
print (fast_power 2 10000);
print (fast_power 2 100000);

