
(3-4 days)
* More logic (induction, sets etc)

(2 days)
* Makefile target: install
* examples
* version 0.1

* def (overriding, non-recursive let)
* update 'thesis' in *-intro
* intros, forall-intros, impl-intros
* make lemmas etc work with modules
* tauto & auto tactics
* forward bug (checking frames does not work)
* bug: forward should be disallowed in macro functions (check if this is so)
* macro invocation stacktrace

* 'mark' is a stupid hack which doesn't fully work and should be removed
* implement Node.normalize properly
* fix comparing & matching recursive data structures
* Better (O(1)) logic variable handling in fix etc.

* names should be preserved for variables in fix etc
* Get rid of quadratic time in join-tokens -- improve token list representation.
* CAppl
* inherit Module
* improve efficiency of type inference
* macro priorities instead of syntax macrosep
* saving parsed files in binary (*.ipb)
* lazy matching
* Improve evaluator efficiency even more
* Improve quoted match / equal efficiency
* In the parser, translate closed lets directly into Delayed nodes
* Type inference (fun macro)
* Improve Node.to_string (use pretty printing from the ocaml's Format module)
* 'syntax drop' for blocks and macroseps
